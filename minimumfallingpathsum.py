# -*- coding: utf-8 -*-
"""MinimumFallingPathSum.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QHxXuynhvr6v7oostUoz8C2EsCOMsO0e
"""

class Solution:
    def minFallingPathSum(self, matrix: List[List[int]]) -> int:
        
        minElement = float('inf')
        n = len(matrix)
        for i in range(1, len(matrix)):
            for j in range(len(matrix)):
                if (j == 0):
                    matrix[i][j] = matrix[i][j] + min(matrix[i-1][j],matrix[i-1][j+1])
                elif (j == n-1):
                    matrix[i][j] = matrix[i][j] + min(matrix[i-1][j], matrix[i-1][j-1])
                else:
                    matrix[i][j] = matrix[i][j] + min(matrix[i-1][j-1], min(matrix[i-1][j], matrix[i-1][j+1]))
        
        for j in range(len(matrix)):
            minElement = min(minElement, matrix[n-1][j])
        return minElement