Time Complexity = O(n)
Space Complexity = O(n)

class Solution:
    def minFallingPathSum(self, matrix: List[List[int]]) -> int:
        row = len(matrix)
        col = len(matrix[0])

        dp = [[0 for j in range(col)] for i in range(row)]
        dp[0] = matrix[0]
        for i in range(1, row):
            for j in range(col):
                if j == 0:
                    dp[i][j] = matrix[i][j] + min(dp[i-1][j], dp[i-1][j+1])
                elif j == col-1:
                    dp[i][j] = matrix[i][j] + min(dp[i-1][j-1], dp[i-1][j])
                else:
                    dp[i][j] = matrix[i][j] + min(dp[i-1][j-1], dp[i-1][j], dp[i-1][j+1])

        return min(dp[-1])
                    
                    