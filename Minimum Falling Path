// Time :O(n^2)
//Space :O(1)
//Leetcode :Yes
class Solution {
    public int minFallingPathSum(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        int res = Integer.MAX_VALUE;
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(i!=0)
                    matrix[i][j] += Math.min(j-1<0?Integer.MAX_VALUE:matrix[i-1][j-1], Math.min(matrix[i-1][j], j+1>=n?Integer.MAX_VALUE:matrix[i-1][j+1]));
                if(i==m-1){
                    res = Math.min(res, matrix[i][j]);
                }
            }
        }
        return res;
    }
}
