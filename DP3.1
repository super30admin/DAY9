class Solution {
public:
    int deleteAndEarn(vector<int>& nums) {
    int n = nums.size();    
    int maximum = INT_MIN;
       for(int i =0; i<n ; i++ ){
        maximum = max(maximum, nums[i]);
       }
        
     vector<int> ans(maximum+1,0);
        for(int i = 0; i<n; i++){
            ans[nums[i]] += nums[i]; 
            
        }
        for(int i = 0; i<maximum+1; i++){
         cout << ans[i]<<endl;
            
        }

        int ulti[maximum+1][2];
        ulti[0][0]= 0;
        ulti[0][1] = 0;
        for(int i =1 ; i< maximum+1; i++){
            for(int j =0; j <2; j++){
                if(j==0){ulti[i][j] = max(ulti[i-1][j], ulti[i-1][j+1]); }
                if(j==1){ulti[i][j] = ulti[i-1][0] + ans[i];}
            }
        }
        
    return max(ulti[maximum][0], ulti[maximum][1]);    
    }
};

//////////////////////

class Solution {
public:
    int deleteAndEarn(vector<int>& nums) {
    int n = nums.size();    
    int maximum = INT_MIN;
       for(int i =0; i<n ; i++ ){
        maximum = max(maximum, nums[i]);
       }
        
     vector<int> ans(maximum+1,0);
        for(int i = 0; i<n; i++){
            ans[nums[i]] += nums[i]; 
            
        }
        int temp;
        int skip =0;
        int take =0;;
        for(int i =1 ; i< maximum+1; i++){
            temp = skip;
            skip = max(skip, take);
            take = temp + ans[i];
        }
        
    return max(skip,take);    
    }
};
