class Solution {
    public int minFallingPathSum(int[][] matrix) {
    int n=matrix.length;
        int min=Integer.MAX_VALUE;
        int m=matrix[0].length;
       int[][] sum=new int[n][m];
        for(int i=0;i<n;i++){
            sum[0][i]=matrix[0][i];
        }
        for(int i=1;i<n;i++){
         
        for(int j=0;j<m;j++){
            
               
             if(j==0){
                sum[i][j]=matrix[i][j] +Math.min(sum[i-1][j],sum[i-1][j+1]);
            }else if(j==m-1){
               sum[i][j]=matrix[i][j] +Math.min(sum[i-1][j],sum[i-1][j-1]);
            } else{

            sum[i][j]=matrix[i][j] + Math.min(Math.min(sum[i-1][j-1], sum[i-1][j]), sum[i-1][j+1]);
                    
            }
            
            
        }
    
        }
        int ans=Integer.MAX_VALUE;
        for(int i=0;i<m;i++){
            ans=Math.min(ans, sum[n-1][i]);
      }
        return ans;
    }
}
